{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\Documents\\\\github clones\\\\css asssignment\\\\AbdelrahmanBekhit.github.io\\\\src\\\\EditNote.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditNote(_ref) {\n  _s();\n  let {\n    notes,\n    activeNote,\n    onNoteChange,\n    onDeleteNote\n  } = _ref;\n  const history = useHistory();\n  const {\n    noteId\n  } = useParams();\n  const editorRef = useRef(null);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  useEffect(() => {\n    const note = notes.find(note => note.id === activeNote);\n    if (note) {\n      setTitle(note.title);\n      setBody(note.body);\n    }\n  }, [notes, activeNote]);\n  useEffect(() => {\n    if (editorRef.current) {\n      // initialize the Quill editor instance with options for formatting and links\n      const editor = editorRef.current.getEditor();\n      editor.format('font', 'sans-serif');\n      editor.format('size', '16px');\n      editor.format('bold', false);\n      editor.format('italic', false);\n      editor.format('underline', false);\n      editor.clipboard.addMatcher(Node.ELEMENT_NODE, (node, delta) => {\n        const attrs = {};\n        const style = node.getAttribute('style');\n        if (style) {\n          attrs.style = style;\n        }\n        if (node.tagName === 'A') {\n          attrs.href = node.getAttribute('href');\n          return {\n            ops: [{\n              insert: node.innerText,\n              attributes: attrs\n            }]\n          };\n        }\n        return delta;\n      });\n      editor.on('text-change', () => {\n        setBody(editorRef.current.getEditor().root.innerHTML);\n      });\n    }\n  }, []);\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleSave() {\n    const updatedNote = {\n      ...notes.find(note => note.id === activeNote),\n      title,\n      body,\n      lastModified: new Date().toLocaleString()\n    };\n    onNoteChange(activeNote, updatedNote);\n    history.push(`/${activeNote}`);\n  }\n  function handleDelete() {\n    onDeleteNote(activeNote);\n    history.push('/');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-note-header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      ref: editorRef,\n      value: body,\n      modules: {\n        toolbar: [[{\n          font: []\n        }], [{\n          size: ['small', false, 'large', 'huge']\n        }], ['bold', 'italic', 'underline'], ['link'], [{\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }], [{\n          remove: []\n        }]]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(EditNote, \"1yBMkMuoFW7AP33URwbu074rF8g=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = EditNote;\nexport default EditNote;\nvar _c;\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Link","useHistory","useParams","ReactQuill","jsxDEV","_jsxDEV","EditNote","_ref","_s","notes","activeNote","onNoteChange","onDeleteNote","history","noteId","editorRef","title","setTitle","body","setBody","note","find","id","current","editor","getEditor","format","clipboard","addMatcher","Node","ELEMENT_NODE","node","delta","attrs","style","getAttribute","tagName","href","ops","insert","innerText","attributes","on","root","innerHTML","handleTitleChange","event","target","value","handleSave","updatedNote","lastModified","Date","toLocaleString","push","handleDelete","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","modules","toolbar","font","size","list","remove","_c","$RefreshReg$"],"sources":["D:/User/Documents/github clones/css asssignment/AbdelrahmanBekhit.github.io/src/EditNote.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nfunction EditNote({ notes, activeNote, onNoteChange, onDeleteNote }) {\r\n  const history = useHistory();\r\n  const { noteId } = useParams();\r\n  const editorRef = useRef(null);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n\r\n  useEffect(() => {\r\n    const note = notes.find((note) => note.id === activeNote);\r\n    if (note) {\r\n      setTitle(note.title);\r\n      setBody(note.body);\r\n    }\r\n  }, [notes, activeNote]);\r\n\r\n  useEffect(() => {\r\n    if (editorRef.current) {\r\n      // initialize the Quill editor instance with options for formatting and links\r\n      const editor = editorRef.current.getEditor();\r\n      editor.format('font', 'sans-serif');\r\n      editor.format('size', '16px');\r\n      editor.format('bold', false);\r\n      editor.format('italic', false);\r\n      editor.format('underline', false);\r\n      editor.clipboard.addMatcher(Node.ELEMENT_NODE, (node, delta) => {\r\n        const attrs = {};\r\n        const style = node.getAttribute('style');\r\n        if (style) {\r\n          attrs.style = style;\r\n        }\r\n        if (node.tagName === 'A') {\r\n          attrs.href = node.getAttribute('href');\r\n          return { ops: [{ insert: node.innerText, attributes: attrs }] };\r\n        }\r\n        return delta;\r\n      });\r\n      editor.on('text-change', () => {\r\n        setBody(editorRef.current.getEditor().root.innerHTML);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleTitleChange(event) {\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function handleSave() {\r\n    const updatedNote = {\r\n      ...notes.find((note) => note.id === activeNote),\r\n      title,\r\n      body,\r\n      lastModified: new Date().toLocaleString(),\r\n    };\r\n    onNoteChange(activeNote, updatedNote);\r\n    history.push(`/${activeNote}`);\r\n  }\r\n\r\n  function handleDelete() {\r\n    onDeleteNote(activeNote);\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div className=\"edit-note\">\r\n      <div className=\"edit-note-header\">\r\n        <input type=\"text\" value={title} onChange={handleTitleChange} />\r\n        <div className=\"edit-note-header-buttons\">\r\n          <button onClick={handleSave}>Save</button>\r\n          <button onClick={handleDelete}>Delete</button>\r\n        </div>\r\n      </div>\r\n      <ReactQuill\r\n        ref={editorRef}\r\n        value={body}\r\n        modules={{\r\n          toolbar: [\r\n            [{ font: [] }],\r\n            [{ size: ['small', false, 'large', 'huge'] }],\r\n            ['bold', 'italic', 'underline'],\r\n            ['link'],\r\n            [{ list: 'ordered' }, { list: 'bullet' }],\r\n            [{ remove: [] }],\r\n          ],\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditNote;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}