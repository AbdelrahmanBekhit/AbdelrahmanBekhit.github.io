{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\Documents\\\\github clones\\\\css asssignment\\\\AbdelrahmanBekhit.github.io\\\\src\\\\EditNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport CalendarSelector from \"./CalendarSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditNote = _ref => {\n  _s();\n  let {\n    notes,\n    activeNote,\n    onNoteChange,\n    onDeleteNote\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    noteId\n  } = useParams();\n  const [note, setNote] = useState(notes.find(note => note.id === activeNote));\n  const handleNoteChange = e => {\n    setNote({\n      ...note,\n      [e.target.name]: e.target.value,\n      lastModified: new Date().toISOString().slice(0, 19)\n    });\n  };\n  const handleSaveNote = () => {\n    onNoteChange(activeNote, note);\n    navigate(\"/\");\n  };\n  const handleDeleteNote = () => {\n    onDeleteNote(activeNote);\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: note.title,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"body\",\n      placeholder: \"Write your note here...\",\n      value: note.body,\n      onChange: handleNoteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-footer\",\n      children: [/*#__PURE__*/_jsxDEV(CalendarSelector, {\n        value: note.lastModified,\n        onDateChange: date => {\n          setNote({\n            ...note,\n            lastModified: date\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveNote,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(EditNote, \"+jE1BD9zx8VxPf/sL7l3eeSR8Xg=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditNote;\nexport default EditNote;\nvar _c;\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","CalendarSelector","jsxDEV","_jsxDEV","EditNote","_ref","_s","notes","activeNote","onNoteChange","onDeleteNote","navigate","noteId","note","setNote","find","id","handleNoteChange","e","target","name","value","lastModified","Date","toISOString","slice","handleSaveNote","handleDeleteNote","className","children","type","placeholder","title","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","body","onDateChange","date","_c","$RefreshReg$"],"sources":["D:/User/Documents/github clones/css asssignment/AbdelrahmanBekhit.github.io/src/EditNote.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport CalendarSelector from \"./CalendarSelector\";\r\n\r\nconst EditNote = ({ notes, activeNote, onNoteChange, onDeleteNote }) => {\r\n  const navigate = useNavigate();\r\n  const { noteId } = useParams();\r\n  const [note, setNote] = useState(notes.find((note) => note.id === activeNote));\r\n\r\n  const handleNoteChange = (e) => {\r\n    setNote({\r\n      ...note,\r\n      [e.target.name]: e.target.value,\r\n      lastModified: new Date().toISOString().slice(0, 19),\r\n    });\r\n  };\r\n\r\n  const handleSaveNote = () => {\r\n    onNoteChange(activeNote, note);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDeleteNote = () => {\r\n    onDeleteNote(activeNote);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"note-container\">\r\n      <div className=\"note-header\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={note.title}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button onClick={handleDeleteNote}>Delete</button>\r\n      </div>\r\n      <textarea\r\n        name=\"body\"\r\n        placeholder=\"Write your note here...\"\r\n        value={note.body}\r\n        onChange={handleNoteChange}\r\n      ></textarea>\r\n      <div className=\"note-footer\">\r\n        <CalendarSelector\r\n          value={note.lastModified}\r\n          onDateChange={(date) => {\r\n            setNote({\r\n              ...note,\r\n              lastModified: date,\r\n            });\r\n          }}\r\n        />\r\n        <button onClick={handleSaveNote}>Save</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditNote;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGC,IAAA,IAAuD;EAAAC,EAAA;EAAA,IAAtD;IAAEC,KAAK;IAAEC,UAAU;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAAL,IAAA;EACjE,MAAMM,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAM;IAAEa;EAAO,CAAC,GAAGZ,SAAS,EAAE;EAC9B,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAACS,KAAK,CAACQ,IAAI,CAAEF,IAAI,IAAKA,IAAI,CAACG,EAAE,KAAKR,UAAU,CAAC,CAAC;EAE9E,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAAC;MACN,GAAGD,IAAI;MACP,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE,KAAK;MAC/BC,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;IACpD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BjB,YAAY,CAACD,UAAU,EAAEK,IAAI,CAAC;IAC9BF,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BjB,YAAY,CAACF,UAAU,CAAC;IACxBG,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACER,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B1B,OAAA;MAAKyB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B1B,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXV,IAAI,EAAC,OAAO;QACZW,WAAW,EAAC,OAAO;QACnBV,KAAK,EAAER,IAAI,CAACmB,KAAM;QAClBC,QAAQ,EAAEhB;MAAiB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B,eACFlC,OAAA;QAAQmC,OAAO,EAAEX,gBAAiB;QAAAE,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9C,eACNlC,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXW,WAAW,EAAC,yBAAyB;MACrCV,KAAK,EAAER,IAAI,CAAC0B,IAAK;MACjBN,QAAQ,EAAEhB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB,eACZlC,OAAA;MAAKyB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B1B,OAAA,CAACF,gBAAgB;QACfoB,KAAK,EAAER,IAAI,CAACS,YAAa;QACzBkB,YAAY,EAAGC,IAAI,IAAK;UACtB3B,OAAO,CAAC;YACN,GAAGD,IAAI;YACPS,YAAY,EAAEmB;UAChB,CAAC,CAAC;QACJ;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eACFlC,OAAA;QAAQmC,OAAO,EAAEZ,cAAe;QAAAG,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAC/B,EAAA,CAvDIF,QAAQ;EAAA,QACKL,WAAW,EACTC,SAAS;AAAA;AAAA0C,EAAA,GAFxBtC,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}