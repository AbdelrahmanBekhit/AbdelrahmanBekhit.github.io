{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\Documents\\\\github clones\\\\css asssignment\\\\AbdelrahmanBekhit.github.io\\\\src\\\\CalendarSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarSelector = () => {\n  _s();\n  const localOffset = new Date().getTimezoneOffset() * 60000; // Convert offset to milliseconds\n  const [date, setDate] = useState(new Date(Date.now() - localOffset).toISOString().slice(0, 19));\n  const handleDateChange = e => {\n    setDate(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"date-input\",\n      type: \"datetime-local\",\n      value: date,\n      style: {\n        border: \"none\",\n        outline: \"none\",\n        padding: \"0\"\n      },\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarSelector, \"HS66zEvDHaB9e/QYrC5N7ZNnDgM=\");\n_c = CalendarSelector;\nexport default CalendarSelector;\nvar _c;\n$RefreshReg$(_c, \"CalendarSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CalendarSelector","_s","localOffset","Date","getTimezoneOffset","date","setDate","now","toISOString","slice","handleDateChange","e","target","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","style","border","outline","padding","onChange","_c","$RefreshReg$"],"sources":["D:/User/Documents/github clones/css asssignment/AbdelrahmanBekhit.github.io/src/CalendarSelector.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst CalendarSelector = () => {\r\n  const localOffset = new Date().getTimezoneOffset() * 60000; // Convert offset to milliseconds\r\n  const [date, setDate] = useState(new Date(Date.now() - localOffset).toISOString().slice(0, 19));\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"date-input\"></label>\r\n      <input\r\n        id=\"date-input\"\r\n        type=\"datetime-local\"\r\n        value={date}\r\n        style={{ border: \"none\", outline: \"none\", padding: \"0\" }}\r\n        onChange={handleDateChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarSelector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAIM,IAAI,CAACA,IAAI,CAACI,GAAG,EAAE,GAAGL,WAAW,CAAC,CAACM,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EAE/F,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAOgB,OAAO,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACpCpB,OAAA;MACEqB,EAAE,EAAC,YAAY;MACfC,IAAI,EAAC,gBAAgB;MACrBR,KAAK,EAAER,IAAK;MACZiB,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAI,CAAE;MACzDC,QAAQ,EAAEhB;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAClB,EAAA,CApBID,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AAsBtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}