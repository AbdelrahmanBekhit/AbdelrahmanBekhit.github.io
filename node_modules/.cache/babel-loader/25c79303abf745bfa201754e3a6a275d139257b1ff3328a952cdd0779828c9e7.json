{"ast":null,"code":"var _jsxFileName = \"D:\\\\User\\\\Documents\\\\github clones\\\\css asssignment\\\\AbdelrahmanBekhit.github.io\\\\src\\\\Typing.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport EditButtons from \"./EditButtons\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Typing(props) {\n  _s();\n  const [text, setText] = useState('');\n  function handleButtonClick(formatting) {\n    switch (formatting) {\n      case 'bold':\n        setText(prevText => `${prevText}<b></b>`);\n        break;\n      case 'italic':\n        setText(prevText => `${prevText}<i></i>`);\n        break;\n      case 'underline':\n        setText(prevText => `${prevText}<u></u>`);\n        break;\n      case 'link':\n        const link = prompt('Enter the link:');\n        setText(prevText => `${prevText}<a href=\"${link}\"></a>`);\n        break;\n      case 'ordered-list':\n        setText(prevText => `${prevText}<ol><li></li></ol>`);\n        break;\n      case 'unordered-list':\n        setText(prevText => `${prevText}<ul><li></li></ul>`);\n        break;\n      case 'remove-formatting':\n        setText('');\n        break;\n      default:\n        break;\n    }\n  }\n  function handleTextChange(event) {\n    setText(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      handleButtonClick: handleButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Typing, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = Typing;\nexport default Typing;\nvar _c;\n$RefreshReg$(_c, \"Typing\");","map":{"version":3,"names":["React","EditButtons","useState","jsxDEV","_jsxDEV","Typing","props","_s","text","setText","handleButtonClick","formatting","prevText","link","prompt","handleTextChange","event","target","value","children","Toolbar","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["D:/User/Documents/github clones/css asssignment/AbdelrahmanBekhit.github.io/src/Typing.js"],"sourcesContent":["import React from \"react\";\r\nimport EditButtons from \"./EditButtons\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Typing(props) {\r\n  const [text, setText] = useState('');\r\n\r\n  function handleButtonClick(formatting) {\r\n    switch (formatting) {\r\n      case 'bold':\r\n        setText(prevText => `${prevText}<b></b>`);\r\n        break;\r\n      case 'italic':\r\n        setText(prevText => `${prevText}<i></i>`);\r\n        break;\r\n      case 'underline':\r\n        setText(prevText => `${prevText}<u></u>`);\r\n        break;\r\n      case 'link':\r\n        const link = prompt('Enter the link:');\r\n        setText(prevText => `${prevText}<a href=\"${link}\"></a>`);\r\n        break;\r\n      case 'ordered-list':\r\n        setText(prevText => `${prevText}<ol><li></li></ol>`);\r\n        break;\r\n      case 'unordered-list':\r\n        setText(prevText => `${prevText}<ul><li></li></ul>`);\r\n        break;\r\n      case 'remove-formatting':\r\n        setText('');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleTextChange(event) {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar handleButtonClick={handleButtonClick} />\r\n      <textarea value={text} onChange={handleTextChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Typing;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASQ,iBAAiBA,CAACC,UAAU,EAAE;IACrC,QAAQA,UAAU;MAChB,KAAK,MAAM;QACTF,OAAO,CAACG,QAAQ,IAAK,GAAEA,QAAS,SAAQ,CAAC;QACzC;MACF,KAAK,QAAQ;QACXH,OAAO,CAACG,QAAQ,IAAK,GAAEA,QAAS,SAAQ,CAAC;QACzC;MACF,KAAK,WAAW;QACdH,OAAO,CAACG,QAAQ,IAAK,GAAEA,QAAS,SAAQ,CAAC;QACzC;MACF,KAAK,MAAM;QACT,MAAMC,IAAI,GAAGC,MAAM,CAAC,iBAAiB,CAAC;QACtCL,OAAO,CAACG,QAAQ,IAAK,GAAEA,QAAS,YAAWC,IAAK,QAAO,CAAC;QACxD;MACF,KAAK,cAAc;QACjBJ,OAAO,CAACG,QAAQ,IAAK,GAAEA,QAAS,oBAAmB,CAAC;QACpD;MACF,KAAK,gBAAgB;QACnBH,OAAO,CAACG,QAAQ,IAAK,GAAEA,QAAS,oBAAmB,CAAC;QACpD;MACF,KAAK,mBAAmB;QACtBH,OAAO,CAAC,EAAE,CAAC;QACX;MACF;QACE;IAAM;EAEZ;EAEA,SAASM,gBAAgBA,CAACC,KAAK,EAAE;IAC/BP,OAAO,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B;EAEA,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACgB,OAAO;MAACV,iBAAiB,EAAEA;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACjDpB,OAAA;MAAUc,KAAK,EAAEV,IAAK;MAACiB,QAAQ,EAAEV;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjD;AAEV;AAACjB,EAAA,CA1CQF,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AA4Cf,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}